"""add business store table for real commercial data

Revision ID: 771c75d50891
Revises: 32578c0e26e2
Create Date: 2025-06-17 10:17:25.798673

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '771c75d50891'
down_revision: Union[str, None] = '32578c0e26e2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('email_verifications',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_verifications_email'), 'email_verifications', ['email'], unique=False)
    op.create_table('users',
    sa.Column('uuid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('user_type', sa.Enum('PERSONAL', 'BUSINESS', name='usertype'), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('social_provider', sa.String(), nullable=True),
    sa.Column('social_id', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('business_profiles',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('users_id', sa.String(length=36), nullable=False),
    sa.Column('business_name', sa.String(length=100), nullable=False),
    sa.Column('business_registration_number', sa.String(length=20), nullable=False),
    sa.Column('business_type', sa.String(length=50), nullable=False),
    sa.Column('business_category', sa.String(length=50), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=False),
    sa.Column('representative_name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('business_registration_number')
    )
    op.create_table('password_resets',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('users_id', sa.String(length=36), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=True),
    sa.Column('used_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.drop_index(op.f('ix_population_statistics_administrative_code'), table_name='population_statistics')
    op.drop_index(op.f('ix_population_statistics_city_district'), table_name='population_statistics')
    op.drop_index(op.f('ix_population_statistics_reference_date'), table_name='population_statistics')
    op.drop_table('population_statistics')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('population_statistics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('administrative_code', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('reference_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('province', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('city', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('district', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('age_0_9_male', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_10_19_male', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_20_29_male', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_30_39_male', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_40_49_male', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_50_59_male', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_60_69_male', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_70_79_male', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_80_89_male', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_90_99_male', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_100_plus_male', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_0_9_female', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_10_19_female', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_20_29_female', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_30_39_female', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_40_49_female', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_50_59_female', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_60_69_female', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_70_79_female', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_80_89_female', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_90_99_female', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('age_100_plus_female', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('total_population', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('total_male', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('total_female', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('population_statistics_pkey'))
    )
    op.create_index(op.f('ix_population_statistics_reference_date'), 'population_statistics', ['reference_date'], unique=False)
    op.create_index(op.f('ix_population_statistics_city_district'), 'population_statistics', ['city', 'district'], unique=False)
    op.create_index(op.f('ix_population_statistics_administrative_code'), 'population_statistics', ['administrative_code'], unique=False)
    op.drop_table('password_resets')
    op.drop_table('business_profiles')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_email_verifications_email'), table_name='email_verifications')
    op.drop_table('email_verifications')
    # ### end Alembic commands ###
